/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CoinImport } from './routes/$coin'
import { Route as PumpDotFunRouteImport } from './routes/pump-dot-fun/route'
import { Route as IndexImport } from './routes/index'
import { Route as PumpDotFunIndexImport } from './routes/pump-dot-fun/index'
import { Route as PumpDotFunFeaturedImport } from './routes/pump-dot-fun/featured'

// Create/Update Routes

const CoinRoute = CoinImport.update({
  id: '/$coin',
  path: '/$coin',
  getParentRoute: () => rootRoute,
} as any)

const PumpDotFunRouteRoute = PumpDotFunRouteImport.update({
  id: '/pump-dot-fun',
  path: '/pump-dot-fun',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PumpDotFunIndexRoute = PumpDotFunIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PumpDotFunRouteRoute,
} as any)

const PumpDotFunFeaturedRoute = PumpDotFunFeaturedImport.update({
  id: '/featured',
  path: '/featured',
  getParentRoute: () => PumpDotFunRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/pump-dot-fun': {
      id: '/pump-dot-fun'
      path: '/pump-dot-fun'
      fullPath: '/pump-dot-fun'
      preLoaderRoute: typeof PumpDotFunRouteImport
      parentRoute: typeof rootRoute
    }
    '/$coin': {
      id: '/$coin'
      path: '/$coin'
      fullPath: '/$coin'
      preLoaderRoute: typeof CoinImport
      parentRoute: typeof rootRoute
    }
    '/pump-dot-fun/featured': {
      id: '/pump-dot-fun/featured'
      path: '/featured'
      fullPath: '/pump-dot-fun/featured'
      preLoaderRoute: typeof PumpDotFunFeaturedImport
      parentRoute: typeof PumpDotFunRouteImport
    }
    '/pump-dot-fun/': {
      id: '/pump-dot-fun/'
      path: '/'
      fullPath: '/pump-dot-fun/'
      preLoaderRoute: typeof PumpDotFunIndexImport
      parentRoute: typeof PumpDotFunRouteImport
    }
  }
}

// Create and export the route tree

interface PumpDotFunRouteRouteChildren {
  PumpDotFunFeaturedRoute: typeof PumpDotFunFeaturedRoute
  PumpDotFunIndexRoute: typeof PumpDotFunIndexRoute
}

const PumpDotFunRouteRouteChildren: PumpDotFunRouteRouteChildren = {
  PumpDotFunFeaturedRoute: PumpDotFunFeaturedRoute,
  PumpDotFunIndexRoute: PumpDotFunIndexRoute,
}

const PumpDotFunRouteRouteWithChildren = PumpDotFunRouteRoute._addFileChildren(
  PumpDotFunRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/pump-dot-fun': typeof PumpDotFunRouteRouteWithChildren
  '/$coin': typeof CoinRoute
  '/pump-dot-fun/featured': typeof PumpDotFunFeaturedRoute
  '/pump-dot-fun/': typeof PumpDotFunIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$coin': typeof CoinRoute
  '/pump-dot-fun/featured': typeof PumpDotFunFeaturedRoute
  '/pump-dot-fun': typeof PumpDotFunIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/pump-dot-fun': typeof PumpDotFunRouteRouteWithChildren
  '/$coin': typeof CoinRoute
  '/pump-dot-fun/featured': typeof PumpDotFunFeaturedRoute
  '/pump-dot-fun/': typeof PumpDotFunIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/pump-dot-fun'
    | '/$coin'
    | '/pump-dot-fun/featured'
    | '/pump-dot-fun/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$coin' | '/pump-dot-fun/featured' | '/pump-dot-fun'
  id:
    | '__root__'
    | '/'
    | '/pump-dot-fun'
    | '/$coin'
    | '/pump-dot-fun/featured'
    | '/pump-dot-fun/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PumpDotFunRouteRoute: typeof PumpDotFunRouteRouteWithChildren
  CoinRoute: typeof CoinRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PumpDotFunRouteRoute: PumpDotFunRouteRouteWithChildren,
  CoinRoute: CoinRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pump-dot-fun",
        "/$coin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/pump-dot-fun": {
      "filePath": "pump-dot-fun/route.tsx",
      "children": [
        "/pump-dot-fun/featured",
        "/pump-dot-fun/"
      ]
    },
    "/$coin": {
      "filePath": "$coin.tsx"
    },
    "/pump-dot-fun/featured": {
      "filePath": "pump-dot-fun/featured.tsx",
      "parent": "/pump-dot-fun"
    },
    "/pump-dot-fun/": {
      "filePath": "pump-dot-fun/index.tsx",
      "parent": "/pump-dot-fun"
    }
  }
}
ROUTE_MANIFEST_END */
